{
	"variables": [],
	"info": {
		"name": "rest-api-template",
		"_postman_id": "575c788b-d0f3-7429-3a5b-6624954ffe2f",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/register",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user01\",\n  \"password\": \"asdf\"\n}"
				},
				"description": "This should return a list of items, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Access token was not empty\"] = jsonData.access_token !== \"\";",
							"",
							"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token);"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/auth",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user01\",\n  \"password\": \"asdf\"\n}"
				},
				"description": "This should return a list of items, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/store/store01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/store/store01",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This will create an store, uniquely identified by its name. If the store already exist, it will fail."
			},
			"response": []
		},
		{
			"name": "/store/store01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/store/store01",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This will return return one specific store, uniquely identified by its name. No two stores may have the same name."
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/stores",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This should return a list of stores, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/item/item01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/item/item01",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"price\": 19.99,\n  \"store_id\": 1\n}"
				},
				"description": "This will create an item, uniquely identified by its name. If the item already exist, it will fail."
			},
			"response": []
		},
		{
			"name": "/item/item01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/item/item01",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This will return return one specific item, uniquely identified by its name. No two items may have the same name."
			},
			"response": []
		},
		{
			"name": "/item/item01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/item/item01",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"price\": 11.99,\n  \"store_id\": 1\n}"
				},
				"description": "This will create a new item, or update an existing item."
			},
			"response": []
		},
		{
			"name": "/items",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/items",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This should return a list of items, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/item/item01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/item/item01",
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This will delete an item, uniquely identified by its name."
			},
			"response": []
		},
		{
			"name": "/store/store01",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/store/store01",
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "This will delete an item, uniquely identified by its name."
			},
			"response": []
		},
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/register",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user01\",\n  \"password\": \"asdf\"\n}"
				},
				"description": "This will create an item, uniquely identified by its name. If the item already exist, it will fail."
			},
			"response": []
		}
	]
}